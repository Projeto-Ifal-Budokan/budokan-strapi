services:
  strapi:
    container_name: strapi-app-dev
    ports:
      - "1337:1337"
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        NODE_ENV: development
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: mysql
      DATABASE_HOST: strapi-mysql-dev
      DATABASE_PORT: 3306
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_ENV: development
      STRAPI_URL: ${STRAPI_URL:-http://localhost:1337}
      ENVIRONMENT_MODE: "ðŸš€ DEVELOPMENT MODE ACTIVE ðŸš€"
    volumes:
      - strapi-uploads:/opt/app/public/uploads
      - strapi-data:/opt/app/data
    # Remove port mapping - accessed through SWAG reverse proxy
    # ports:
    #   - "1337:1337"
    networks:
      - strapi-network
      # - swag # Connect to SWAG network
    depends_on:
      strapi-mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/_health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: sh -c "echo 'ðŸš€ STARTING STRAPI IN DEVELOPMENT MODE ðŸš€' && npm run develop"

  strapi-mysql:
    container_name: strapi-mysql-dev
    image: mysql:8.0.35
    restart: unless-stopped
    # FIXED: Removed --authentication-policy parameter
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      # Temporarily disable init.sql to test
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3309:3306"
    networks:
      - strapi-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Optional: Redis for session management and caching
  redis:
    container_name: strapi-redis-dev
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - strapi-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx removed - using external SWAG reverse proxy

volumes:
  mysql-data:
    driver: local
  strapi-uploads:
    driver: local
  strapi-data:
    driver: local
  redis-data:
    driver: local

networks:
  strapi-network:
    driver: bridge
  # External network for SWAG communication
  # swag:
  #   external: true
